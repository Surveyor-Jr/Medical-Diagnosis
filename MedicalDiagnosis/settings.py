"""
Django settings for MedicalDiagnosis project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
import django_heroku
from pathlib import Path
from paynow import Paynow
import environ
# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['medi-diagnosis.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'diagnosis.apps.DiagnosisConfig',
    'users.apps.UsersConfig', # Auth Application
    # Custom apps
    'crispy_forms',
    'social_django', # for social login
    'django_static_fontawesome',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # for social auth
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'MedicalDiagnosis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Social Backends Auth
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'MedicalDiagnosis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Harare'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configure Symptom Checker API
DIAGNOSIS_URL = env('DIAGNOSIS_API_URL')
DIAGNOSIS_HEADERS = {
            'x-rapidapi-host': env('DIAGNOSIS_API_HOST'),
            'x-rapidapi-key': env('DIAGNOSIS_API_KEY')
        }

# Configure Disease Drug Matching API
DISEASE_DRUG_MATCHING_URL = env('DISEASE_DRUG_MATCHING_URL')
DISEASE_DRUG_MATCHING_HEADERS = {
            'x-rapidapi-host': env('DISEASE_DRUG_MATCHING_HOST'),
            'x-rapidapi-key': env('DISEASE_DRUG_MATCHING_KEY')
}

# Crispy-Forms-Config
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Login URL
LOGIN_URL = '/login/'
# Login Redirect
LOGIN_REDIRECT_URL = '/'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'
# Logout
LOGOUT_REDIRECT_URL = '/'

# Social Auth Setting
SOCIAL_AUTH_JSONFIELD_ENABLED = True

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.google.GoogleOAuth',
    'social_core.backends.twitter.TwitterOAuth', #TODO: needs fixing
    'social_core.backends.github.GithubOAuth2', # works
    'social_core.backends.arcgis.ArcGISOAuth2', # works
    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_URL_NAMESPACE = 'social' # custom namespace

# Social Auth API Keys
SOCIAL_AUTH_GITHUB_KEY = env('GITHUB_KEY')
SOCIAL_AUTH_GITHUB_SECRET = env('GITHUB_SECRET')

# Twitter
SOCIAL_AUTH_TWITTER_KEY = env('TWITTER_KEY')
SOCIAL_AUTH_TWITTER_SECRET = env('TWITTER_SECRET')

# ArcGIS
SOCIAL_AUTH_ARCGIS_KEY = env('ARCGIS_KEY')
SOCIAL_AUTH_ARCGIS_SECRET = env('ARCGIS_SECRET')

# Configure PayNow Payments
paynow = Paynow(
    env('PAYNOW_ID'),
    env('PAYNOW_KEY'),
    'https://medi-diagnosis.herokuapp.com/account/billing',
    'https://medi-diagnosis.herokuapp.com/account/billing'
    )

# Activate Django-Heroku.
django_heroku.settings(locals())

#TODO: 1. Use the Modern Django Administration Template
# 2. Change the Django Admin Wording
# 3. Find a proper name for this application
